{
  "metadata" : {
    "id" : "7f98b108-e11e-414d-8e76-3486c0ba1d62",
    "name" : "questions",
    "user_save_timestamp" : "1970-01-01T01:00:00.000Z",
    "auto_save_timestamp" : "1970-01-01T01:00:00.000Z",
    "language_info" : {
      "name" : "scala",
      "file_extension" : "scala",
      "codemirror_mode" : "text/x-scala"
    },
    "trusted" : true,
    "sparkNotebook" : null,
    "customLocalRepo" : null,
    "customRepos" : null,
    "customDeps" : null,
    "customImports" : null,
    "customArgs" : null,
    "customSparkConf" : null,
    "customVars" : null
  },
  "cells" : [ {
    "metadata" : {
      "id" : "0B818F9ED91F4535936EB421E0AFD0CE"
    },
    "cell_type" : "markdown",
    "source" : "# Data tech test\n\n## Workflow\n\n* Run each cell of this notebook by clicking on the play button ‣ on the top-right.\n* Read carefully the questions and replace the _[INSERT YOUR CODE HERE]_ placeholders with your answers.\n* Test and fix your code then download the notebook as a PDF file from the menu option _File → Download as → PDF (.pdf)_.\n* **Send us the PDF file by email**.\n\nYou can write the answers in SQL (Hive SQL dialect. Documentation here https://hive) or in Scala/Spark (documentation here https://spark.apache.org/docs/latest/quick-start.html).\n\n"
  }, {
    "metadata" : {
      "trusted" : true,
      "input_collapsed" : false,
      "collapsed" : false,
      "id" : "EEBF8322B26840958A53E0BBDCC93219"
    },
    "cell_type" : "code",
    "source" : "// Run the following setup code\nval users = sparkSession.read.json(\"../notebooks/data-tech-test/users.jsonl\") \nval streams = sparkSession.read.json(\"../notebooks/data-tech-test/streams.jsonl\")\nval sqlContext = new org.apache.spark.sql.SQLContext(sparkContext)\nusers.createOrReplaceTempView(\"users\")\nstreams.createOrReplaceTempView(\"streams\")\n// you can ignore the SQLContext warning\n",
    "outputs" : [ ]
  }, {
    "metadata" : {
      "id" : "C42F69659A584CC39E3DE3FBE32494D1"
    },
    "cell_type" : "markdown",
    "source" : "## Data\n\nThere are two tables:\n* the **users** table that contains the information about users of the service\n* and the **streams** table where the streams (song played by the users) are stored.\n\n> **Important**:\n>\n> the _users.registration_ and _streams.stream_time_ fields are dates formatted as Unix time stamps in milliseconds,\n> for example `1559347200000` represents the following date _2019/06/01 00:00:00 UTC+0_\n\nYou can see extracts of both tables content bellow:\n"
  }, {
    "metadata" : {
      "id" : "800A74CD318C4B8F8D7542331FBB106F"
    },
    "cell_type" : "markdown",
    "source" : "* Users table extract:"
  }, {
    "metadata" : {
      "trusted" : true,
      "input_collapsed" : false,
      "collapsed" : false,
      "presentation" : {
        "tabs_state" : "{\n  \"tab_id\": \"#tab787125986-0\"\n}",
        "pivot_chart_state" : "{\n  \"hiddenAttributes\": [],\n  \"menuLimit\": 200,\n  \"cols\": [],\n  \"rows\": [],\n  \"vals\": [],\n  \"exclusions\": {},\n  \"inclusions\": {},\n  \"unusedAttrsVertical\": 85,\n  \"autoSortUnusedAttrs\": false,\n  \"inclusionsInfo\": {},\n  \"aggregatorName\": \"Count\",\n  \"rendererName\": \"Table\"\n}"
      },
      "id" : "9E1BC20002E9404585818F97E50FC3DF"
    },
    "cell_type" : "code",
    "source" : "sqlContext.sql(\"\"\"\nselect * from users limit 3\n\"\"\")\n",
    "outputs" : [ ]
  }, {
    "metadata" : {
      "id" : "D892D06135034DAB96E53877339ED6E8"
    },
    "cell_type" : "markdown",
    "source" : "* Streams table extract:"
  }, {
    "metadata" : {
      "trusted" : true,
      "input_collapsed" : false,
      "collapsed" : false,
      "presentation" : {
        "tabs_state" : "{\n  \"tab_id\": \"#tab230582585-0\"\n}",
        "pivot_chart_state" : "{\n  \"hiddenAttributes\": [],\n  \"menuLimit\": 200,\n  \"cols\": [],\n  \"rows\": [],\n  \"vals\": [],\n  \"exclusions\": {},\n  \"inclusions\": {},\n  \"unusedAttrsVertical\": 85,\n  \"autoSortUnusedAttrs\": false,\n  \"inclusionsInfo\": {},\n  \"aggregatorName\": \"Count\",\n  \"rendererName\": \"Table\"\n}"
      },
      "id" : "6BC6DF24E6794E5D80B5FA00F60BD30F"
    },
    "cell_type" : "code",
    "source" : "sqlContext.sql(\"\"\"\nselect * from streams limit 3\n\"\"\")",
    "outputs" : [ ]
  }, {
    "metadata" : {
      "id" : "F8F297399F284479BFD82128DF8E24F5"
    },
    "cell_type" : "markdown",
    "source" : "\n---\n\n---"
  }, {
    "metadata" : {
      "id" : "1A78A8E23B254BBE93C40954CF33E780"
    },
    "cell_type" : "markdown",
    "source" : "## Question 1: Simple selection\n\nList the IDs of all the users from France (FR)\n"
  }, {
    "metadata" : {
      "trusted" : true,
      "input_collapsed" : false,
      "collapsed" : false,
      "id" : "E80F97A018B546539F1019FEE011D5C5"
    },
    "cell_type" : "code",
    "source" : "sqlContext.sql(\"\"\"\n[INSERT YOUR CODE HERE]\n\"\"\")",
    "outputs" : [ ]
  }, {
    "metadata" : {
      "id" : "40E49E1F668547808D3CE4DB51623993"
    },
    "cell_type" : "markdown",
    "source" : "...\n\n[YOU CAN DOUBLE-CLICK TO ADD YOUR COMMENTS HERE]\n\n..."
  }, {
    "metadata" : {
      "id" : "715908BA83AB4A28AEA5FE583A6F850A"
    },
    "cell_type" : "markdown",
    "source" : "\n## Question 2: Complex selection\n\nList the IDs of all the users who match the following criteria:\n* consent to receive messages (see _consent_ field)\n* don't use a _@gmail.com_ email address\n* have registered before 2019/06/15\n* and never streamed"
  }, {
    "metadata" : {
      "trusted" : true,
      "input_collapsed" : false,
      "collapsed" : false,
      "id" : "5DF9A2BC117A4AD48024AB9F6A19BAFD"
    },
    "cell_type" : "code",
    "source" : "sqlContext.sql(\"\"\"\n[INSERT YOUR CODE HERE]\n\"\"\")",
    "outputs" : [ ]
  }, {
    "metadata" : {
      "id" : "40E49E1F668547808D3CE4DB51623993"
    },
    "cell_type" : "markdown",
    "source" : "...\n\n[YOU CAN DOUBLE-CLICK TO ADD YOUR COMMENTS HERE]\n\n..."
  }, {
    "metadata" : {
      "id" : "E6ACAFC6CA7548D2B97C9787B6FAC868"
    },
    "cell_type" : "markdown",
    "source" : "\n## Question 3: Aggregation\n\nList the IDs of all the users who match the following criteria:\n* have streamed at least two times a song from the artist with ID = 1\n* have never streamed any song from the artist with ID = 9\n\n"
  }, {
    "metadata" : {
      "trusted" : true,
      "input_collapsed" : false,
      "collapsed" : false,
      "id" : "C61C26F59FA8407AA67DE66538A08C1D"
    },
    "cell_type" : "code",
    "source" : "sqlContext.sql(\"\"\"\n[INSERT YOUR CODE HERE]\n\"\"\")",
    "outputs" : [ ]
  }, {
    "metadata" : {
      "id" : "40E49E1F668547808D3CE4DB51623993"
    },
    "cell_type" : "markdown",
    "source" : "...\n\n[YOU CAN DOUBLE-CLICK TO ADD YOUR COMMENTS HERE]\n\n..."
  }, {
    "metadata" : {
      "id" : "B27F10FFB08D4BDB8CFC6BA7097BE428"
    },
    "cell_type" : "markdown",
    "source" : "\n## Question 4: Understand business requirements\n\nThe artists promotion team would like to send promotion messages for the artist with ID = 3.\n\nHere are the business requirements:\n* Users who don't consent to receive messages should not receive this promotion message.\n* Users who already know well and stream often the artist will not find the message useful.\n* The promoted artist has the same style as the artists with ID = 5 and ID = 7. Users who like them will be interested by this promotion message.\n* The promotion message is only available in English and Arabic language, not in French.\n\nWhich criteria will you propose to select the users who will receive the promotion message ?"
  }, {
    "metadata" : {
      "trusted" : true,
      "input_collapsed" : false,
      "collapsed" : false,
      "id" : "435AD1562FBA47FB917733D1B067F19D"
    },
    "cell_type" : "code",
    "source" : "sqlContext.sql(\"\"\"\n[INSERT YOUR CODE HERE]\n\"\"\")\n",
    "outputs" : [ ]
  }, {
    "metadata" : {
      "id" : "40E49E1F668547808D3CE4DB51623993"
    },
    "cell_type" : "markdown",
    "source" : "...\n\n[YOU CAN DOUBLE-CLICK TO ADD YOUR COMMENTS HERE]\n\n..."
  }, {
    "metadata" : {
      "id" : "45F02E909BD743279731FEA2107BDE95"
    },
    "cell_type" : "markdown",
    "source" : "## Thank you!"
  } ],
  "nbformat" : 4
}